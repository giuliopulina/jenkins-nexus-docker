pipeline {
    agent any

    tools {
        // Install the Maven version configured as "M3" and add it to the path.
        maven "M3"
    }


    stages {
        stage('build') {
            steps {
                git(
                    url: "${git_project}",
                    credentialsId: 'jenkins-git-credentials',
                    branch: "main"
                 )

                // Run Maven on a Unix agent.
                sh "mvn -DskipTests=true clean package"
            }
		}
			
		stage ('test') {
			steps {
				parallel (
					"unit tests": { sh 'mvn test' },
					"integration tests": { sh 'mvn integration-test' }
				)
			}
			
		}
		
		stage ('release') {
			steps {
			    sh """
			    git config --global user.email giuliopulina@users.noreply.github.com
				git config --global user.name Jenkins
			    """            
			    
			    withCredentials([usernamePassword(credentialsId: 'nexus-credentials', usernameVariable: 'NEXUS_USERNAME', passwordVariable: 'NEXUS_PASSWORD')]) {
                  
                  sshagent (['jenkins-git-credentials']) {
                     sh 'mvn -Dusername=git -DNEXUS_USERNAME=${NEXUS_USERNAME} -DNEXUS_PASSWORD=${NEXUS_PASSWORD} -s settings.xml --batch-mode clean release:clean release:prepare release:perform'
                  }
                }
            }
            post {
                failure {
                    echo 'An unexpected error occurred during release. Rollbacking...'
                    sshagent (['jenkins-git-credentials']) {
                      sh 'mvn -Dusername=git --batch-mode release:rollback '
                    }
                }
                
                cleanup {
                   sh 'mvn -Dusername=git release:clean'
                }
            }
			
		}

    }
}
